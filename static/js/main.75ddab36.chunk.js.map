{"version":3,"sources":["Textarea.jsx","index.js"],"names":["Textarea","props","_useState","useState","children","_useState2","Object","slicedToArray","txt","setTxt","react_default","a","createElement","className","name","onChange","event","_event$target","target","value","console","log","rows","baseTree","require","TreeLine","styled","button","_templateObject","taggedTemplateLiteral","AddItem","_ref","parent","funcs","onClick","addChild","TreeItem","_ref2","item","toggleOpen","makeParent","isOpen","onDoubleClick","src_Textarea","TreeList","tree","_ref3","map","child","index","key","App","setTree","newTree","toConsumableArray","push","rootElement","document","getElementById","ReactDOM","render"],"mappings":"q4BAgDeA,QApCf,SAAkBC,GAAO,IAAAC,EACDC,mBAASF,EAAMG,UADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAChBM,EADgBH,EAAA,GACXI,EADWJ,EAAA,GAwBvB,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,YACEE,KAAK,gBACLC,SAzBN,SAAsBC,GAAO,IAAAC,EACHD,EAAME,OADHD,EACnBH,KADmBG,EACbE,MACdV,EAAOO,EAAME,OAAOC,OACpBC,QAAQC,IAAIL,EAAME,OAAOC,QAuBrBA,MAAOX,EACPc,KAAK,QCrCPC,EAAWC,EAAQ,IAEnBC,EAAWC,IAAOC,OAAVC,MAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,wMAoBd,SAASwB,EAATC,GAAoC,IAAjBC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,MACzB,OACEvB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACa,EAAD,CAAUS,QAAS,kBAAMD,EAAME,SAASH,KAAxC,MAKN,SAASI,EAATC,GAAmC,IAAfC,EAAeD,EAAfC,KAAML,EAASI,EAATJ,MAChBM,EAA2BN,EAA3BM,WAAYC,EAAeP,EAAfO,WACpB,OACE9B,EAAAC,EAAAC,cAAA,UACG0B,EAAKG,OACJ/B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAJjB,OAOEH,EAAAC,EAAAC,cAACa,EAAD,CACES,QAAS,kBAAMK,EAAWD,IAC1BI,cAAe,kBAAMF,EAAWF,KAEhC5B,EAAAC,EAAAC,cAAC+B,EAAD,KAAWL,EAAKxB,OAEjBwB,EAAKlC,UAAYkC,EAAKG,QACrB/B,EAAAC,EAAAC,cAACgC,EAAD,CAAUN,KAAMA,EAAMO,KAAMP,EAAKlC,SAAU6B,MAAOA,KAM1D,SAASW,EAATE,GAAyC,IAArBR,EAAqBQ,EAArBR,KAAMO,EAAeC,EAAfD,KAAMZ,EAASa,EAATb,MAC9B,OACEvB,EAAAC,EAAAC,cAAA,UACGiC,EAAKE,IAAI,SAACC,EAAOC,GAAR,OACRvC,EAAAC,EAAAC,cAACwB,EAAD,CAAUc,IAAKD,EAAOX,KAAMU,EAAOf,MAAOA,MAE5CvB,EAAAC,EAAAC,cAACkB,EAAD,CAASE,OAAQM,EAAML,MAAOA,KAKpC,SAASkB,IAAM,IAAAjD,EACWC,mBAASoB,GADpBlB,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACN2C,EADMxC,EAAA,GACA+C,EADA/C,EAAA,GAuBP4B,EAAQ,CACZM,WArBiB,SAACD,GAClB,IAAMe,EAAO/C,OAAAgD,EAAA,EAAAhD,CAAOuC,GACpBP,EAAKG,QAAUH,EAAKG,OACpBW,EAAQC,IAmBRlB,SAZe,SAACH,GAChB,IAAMqB,EAAO/C,OAAAgD,EAAA,EAAAhD,CAAOuC,GACfb,EAGHA,EAAO5B,SAASmD,KAAK,CAAEzC,KAAM,aAF7BuC,EAAQE,KAAK,CAAEzC,KAAM,aAIvBsC,EAAQC,IAMRb,WAlBiB,SAACF,GAClB,IAAMe,EAAO/C,OAAAgD,EAAA,EAAAhD,CAAOuC,GACpBP,EAAKlC,SAAW,GAChBgD,EAAQC,KAiBV,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACgC,EAAD,CAAUC,KAAMA,EAAMZ,MAAOA,KAKnC,IAAMuB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOlD,EAAAC,EAAAC,cAACuC,EAAD,MAASK","file":"static/js/main.75ddab36.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n/*\nclass Textarea extends Component {\n  constructor() {\n    super();\n    this.state = {\n      textAreaValue: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n*/\nfunction Textarea(props) {\n  const [txt, setTxt] = useState(props.children);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setTxt(event.target.value);\n    console.log(event.target.value);\n    /*\n    setTxt((prevNote) => {\n      console.log(prevNote);\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n    */\n  }\n\n  function handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      console.log(\"enter press here! \");\n    }\n  }\n\n  return (\n    <div className=\"divwidth\">\n      <textarea\n        name=\"textAreaValue\"\n        onChange={handleChange}\n        value={txt}\n        rows=\"3\"\n      />\n    </div>\n  );\n}\n\nexport default Textarea;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport \"./styles.css\";\nimport Textarea from \"./Textarea\";\nconst baseTree = require(\"./data.json\");\n\nconst TreeLine = styled.button`\n  font-family: Menlo, Consolas, monospace;\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  width: 80%;\n`;\n\nconst options = {\n  hour: \"numeric\",\n  minute: \"numeric\",\n  year: \"2-digit\",\n  month: \"short\",\n  day: \"numeric\"\n};\n\nfunction AddItem({ parent, funcs }) {\n  return (\n    <li>\n      <TreeLine onClick={() => funcs.addChild(parent)}>+</TreeLine>\n    </li>\n  );\n}\n\nfunction TreeItem({ item, funcs }) {\n  const { toggleOpen, makeParent } = funcs;\n  return (\n    <li>\n      {item.isOpen ? (\n        <i className=\"arrow down\"></i>\n      ) : (\n        <i className=\"arrow right\"></i>\n      )}\n      &nbsp;\n      <TreeLine\n        onClick={() => toggleOpen(item)}\n        onDoubleClick={() => makeParent(item)}\n      >\n        <Textarea>{item.name}</Textarea>\n      </TreeLine>\n      {item.children && item.isOpen && (\n        <TreeList item={item} tree={item.children} funcs={funcs} />\n      )}\n    </li>\n  );\n}\n\nfunction TreeList({ item, tree, funcs }) {\n  return (\n    <ul>\n      {tree.map((child, index) => (\n        <TreeItem key={index} item={child} funcs={funcs} />\n      ))}\n      <AddItem parent={item} funcs={funcs} />\n    </ul>\n  );\n}\n\nfunction App() {\n  const [tree, setTree] = useState(baseTree);\n\n  const toggleOpen = (item) => {\n    const newTree = [...tree];\n    item.isOpen = !item.isOpen;\n    setTree(newTree);\n  };\n  const makeParent = (item) => {\n    const newTree = [...tree];\n    item.children = [];\n    setTree(newTree);\n  };\n  const addChild = (parent) => {\n    const newTree = [...tree];\n    if (!parent) {\n      newTree.push({ name: \"New Item\" });\n    } else {\n      parent.children.push({ name: \"New Item\" });\n    }\n    setTree(newTree);\n  };\n\n  const funcs = {\n    toggleOpen,\n    addChild,\n    makeParent\n  };\n  return (\n    <div className=\"App\">\n      <h1>Simple Tree</h1>\n      <TreeList tree={tree} funcs={funcs} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}